version: "3.7"

x-hq-common:
  &hq-common
  restart: ${DOCKER_RESTART_POLICY:-always}
  networks:
    - hq

x-hq-v1-env:
  &hq-v1-env
  APP_URL: ${APP_URL}/v1
  DATABASE_URL: ${V1_DATABASE_URL}
  DEBUG: ${V1_DEBUG}
  ENCRYPT_KEY: ${V1_ENCRYPTION_KEY}
  HQ_VERSION: ${HQ_VERSION}
  REDIS_HOST: v1-redis
  SECRET_KEY: ${V1_SECRET_KEY}
  SENTRY_DSN: https://92976028678c4a749a2e131a13ee5145@o467308.ingest.sentry.io/5493526
  USE_SQLITE: "False"

x-hq-v2-api-env:
  &hq-v2-api-env
  APP_URL: ${APP_URL}/v1
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  AWS_S3_ENDPOINT: ${AWS_S3_ENDPOINT}
  AWS_S3_PUBLIC_ENDPOINT: ${AWS_S3_PUBLIC_ENDPOINT}
  AWS_S3_IMAGE_BUCKET: ${AWS_S3_IMAGE_BUCKET}
  DATABASE_URL: ${V2_DATABASE_URL}
  HTTP_PORT: 80
  HQ_VERSION: ${HQ_VERSION}
  JWT_KEY: ${V2_SECRET_KEY}
  NODE_ENV: ${V2_NODE_ENV:-production}
  REDIS_URL: redis://v2-redis
  SENTRY_DSN: https://c42942d8618e4fc19c10842e39026bca@o467308.ingest.sentry.io/5499286
  V1_DATABASE_URL: ${V1_DATABASE_URL}
  V1_ENCRYPTION_KEY: ${V1_ENCRYPTION_KEY}
  V1_REDIS_URL: redis://v1-redis
  V1_URL: http://v1-web:8000

services:
  s3:
    <<: *hq-common
    container_name: hq-s3
    image: minio/minio:latest
    command: server /data
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - s3:/data
  v1-db:
    <<: *hq-common
    container_name: hq-v1-db
    image: postgres:11.6-alpine
    environment:
      POSTGRES_PASSWORD: ${V1_DB_PASSWORD}
    volumes:
      - v1-db:/var/lib/postgresql/data
  v2-db:
    <<: *hq-common
    container_name: hq-v2-db
    image: postgres:12.4-alpine
    environment:
      POSTGRES_PASSWORD: ${V2_DB_PASSWORD}
    volumes:
      - v2-db:/var/lib/postgresql/data
  v1-redis:
    <<: *hq-common
    container_name: hq-v1-redis
    image: redis:5.0.6-alpine
  v2-redis:
    <<: *hq-common
    container_name: hq-v2-redis
    image: redis:6.2-alpine
  v1-web:
    <<: *hq-common
    container_name: hq-v1-web
    image: ghcr.io/hyperqube-io/v1-web:${HQ_VERSION}
    depends_on:
      - v1-db
      - v1-redis
    environment:
      <<: *hq-v1-env
      APP_URL: ${APP_URL}/v1
      LICENSE_SERVICE_URL: https://license.${HQ_VERSION}.service.hyperqube.io
      V2_URL: ${APP_URL}
  v1-worker:
    <<: *hq-common
    container_name: hq-v1-worker
    image: ghcr.io/hyperqube-io/v1-worker:${HQ_VERSION}
    depends_on:
      - v1-db
      - v1-redis
    environment:
      <<: *hq-v1-env
      WORKERS_DC: ${V1_WORKERS_DC}
      WORKERS_LC: ${V1_WORKERS_LC}
      WORKERS_DEFAULT: ${V1_WORKERS_DEFAULT}
      WORKERS_TYPE: ${V1_WORKERS_TYPE}
  v2-api:
    <<: *hq-common
    container_name: hq-v2-api
    image: ghcr.io/hyperqube-io/v2-api:${HQ_VERSION}
    depends_on:
      - v1-db
      - v2-db
    environment:
      <<: *hq-v2-api-env
  v2-worker:
    <<: *hq-common
    container_name: hq-v2-worker
    image: ghcr.io/hyperqube-io/v2-api:${HQ_VERSION}
    depends_on:
      - v1-db
      - v2-db
      - v2-redis
    environment:
      <<: *hq-v2-api-env
      HQ_MODE: worker
  v2-web:
    <<: *hq-common
    container_name: hq-v2-web
    image: ghcr.io/hyperqube-io/v2-web:${HQ_VERSION}
    environment:
      PUBLIC_URL: ${APP_URL}/
      REACT_APP_API_URL_V1: ${APP_URL}/v1
      REACT_APP_API_URL_V2: ${APP_URL}/v2/api
      REACT_APP_BASE_URL: /
      REACT_APP_FULLSTORY_ORG_ID: 16SYY6
      REACT_APP_HQ_VERSION: ${HQ_VERSION}
  nginx:
    <<: *hq-common
    container_name: hq-nginx
    image: nginx:1.19-alpine
    depends_on:
      - v1-web
      - v2-api
      - v2-web
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs

networks:
  hq:
    name: hq

volumes:
  s3:
  v2-db:
  v1-db:
